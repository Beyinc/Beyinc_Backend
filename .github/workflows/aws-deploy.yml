# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy Node.js Backend

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  package:
    name: Package Node.js app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install production dependencies
        run: npm ci --omit=dev

      - name: Archive project with node_modules
        run: |
          tar -czf Beyinc_Backend.tar.gz .  # includes node_modules

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-artifact
          path: Beyinc_Backend.tar.gz

  deploy:
    name: Deploy to Azure VM
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-artifact
          path: .

      - name: Copy artifact to VM
        uses: appleboy/scp-action@v0.1.7
        with:
          host: 4.150.184.113
          username: azureuser
          key: ${{ secrets.AZURE_VM_KEY }}
          source: "Beyinc_Backend.tar.gz"
          target: "~/apps/backend/"

      - name: SSH into VM and deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: 4.150.184.113
          username: azureuser
          key: ${{ secrets.AZURE_VM_KEY }}
          script: |
            mkdir -p ~/apps/backend
            cd ~/apps/backend
            rm -rf Beyinc_Backend  # remove old deployment
            tar -xzf Beyinc_Backend.tar.gz
            cd Beyinc_Backend
            # node_modules already included from CI
            pm2 delete beyinc-backend-api || :
            pm2 start server.js --name beyinc-backend-api
            pm2 save







# name: Deploy

# on:
#   push:
#     branches: ["main"]

# jobs:
#   Deploy:
#     name: Deploy to EC2
#     runs-on: ubuntu-latest
#     environment: aws-deploy
#     steps:
#       - uses: actions/checkout@v3
#       - name: Build & Deploy
#         env:
#           PRIVATE_KEY: ${{secrets.AWS_SSH_KEY}}
#           HOSTNAME: ${{secrets.AWS_PUBLIC_KEY}}
#           PROD_ENV_FILE: ${{secrets.PROD_ENV_FILE}}

#         run: |
#           echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
#           ssh -o StrictHostKeyChecking=no -i private_key ubuntu@${HOSTNAME} '
#             sudo su -
#             curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
#             . ~/.nvm/nvm.sh
#             nvm install node
#             sudo apt install git -y
#             npm i -g pm2
#             rm -rf ./Beyinc_Backend
#             git clone https://github.com/Beyinc/Beyinc_Backend.git
#             cd ./Beyinc_Backend
#             npm i
#             touch config.env

#             echo PORT=${{ secrets.PORT }} >> config.env
#             echo API_KEY=${{ secrets.API_KEY }} >> config.env
#             echo BEYINC_SITE=${{ secrets.BEYINC_SITE }} >> config.env
#             echo ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }} >> config.env
#             echo ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }} >> config.env
#             echo REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }} >> config.env
#             echo MONGODB_URI=${{ secrets.MONGODB_URI }} >> config.env
#             echo EMAIL=${{ secrets.EMAIL }} >> config.env
#             echo EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} >> config.env
#             echo CLOUDINARY_NAME=${{ secrets.CLOUDINARY_NAME }} >> config.env
#             echo CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }} >> config.env
#             echo CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }} >> config.env
#             echo TWILIO_ACCOUNTSID=${{ secrets.TWILIO_ACCOUNTSID }} >> config.env
#             echo TWILIO_AUTHTOKEN=${{ secrets.TWILIO_AUTHTOKEN }} >> config.env
#             echo TWILIO_PHONE=${{ secrets.TWILIO_PHONE }} >> config.env

#             echo RAZORPAY_APT_SECRET=${{ secrets.RAZORPAY_APT_SECRET }} >> config.env
#             echo RAZORPAY_API_KEY=${{ secrets.RAZORPAY_API_KEY }} >> config.env
#             echo YOUR_CLIENT_ID=${{ secrets.YOUR_CLIENT_ID }} >> config.env
#             echo YOUR_CLIENT_SECRET=${{ secrets.YOUR_CLIENT_SECRET }} >> config.env
#             echo YOUR_REDIRECT_URL=${{ secrets.YOUR_REDIRECT_URL }} >> config.env

#             pm2 delete beyinc-backend-api || : && pm2 start server.js --name 'beyinc-backend-api'
#             pm2 save
#               '


